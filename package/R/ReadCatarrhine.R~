##' .. content for \description{} (no empty lines) ..
##'
##' .. content for \details{} ..
##' @title
##' ReadCatarrhine
##'
##' @description
##' This function reads Excel files with catarrhine coordinate data.
##' 
##' @param file 
##' @return
##' list with three elements:
##' id: data.frame with specimen information
##' A: array with A view coordinates
##' Z: array with Z view coordinates
##'
##' @author Guilherme Garcia
##'
##' @importFrom gdata read.xls
##' @importFrom plyr aaply alply
##' @examples
ReadCatarrhine <- function(file)
{
    error.found <- FALSE
    ## checking if file is a valid measurement file
    tryCatch(expr = {a.view <- read.xls(file, sheet = 'a')},
             error = function(cond) {error.found <<- TRUE})
    tryCatch(expr = {z.view <- read.xls(file, sheet = 'All-in-one')},
             error = function(cond) {error.found <<- TRUE})
    if(error.found) return(NA)
    
    a.view <- a.view[1:34, ]
    z.view <- z.view[1:12, ]

    ### A
    a.start <- which(a.view == 'IS', arr.ind = TRUE)
    a.end <- which(raw.data == 'JP', arr.ind = TRUE)
    a.end <- a.end[seq(2, nrow(a.end), 2), ]

    a.lm <- as.character(a.view[a.start[1, 'row']:a.end[1, 'row'], a.start[1, 'col']])
    ## NA SUCKS BIGTIME EVERY SINGLE FUCKING TIME
    a.lm[is.na(a.lm)] <- 'NA'
    a.left <- duplicated(a.lm)
    a.right <- duplicated(a.lm, fromLast = TRUE)
    a.lm[a.left] <- paste0(a.lm[a.left], '-E')
    a.lm[a.right] <- paste0(a.lm[a.right], '-D')

    ### Z
    z.start <- which(z.view == 'LD', arr.ind = TRUE)
    z.end <- which(raw.data == 'PT', arr.ind = TRUE)
    z.end <- z.end[seq(2, nrow(z.end), 2), ]

    z.lm <- as.character(z.view[z.start[1, 'row']:z.end[1, 'row'], z.start[1, 'col']])
    z.left <- duplicated(z.lm)
    z.right <- duplicated(z.lm, fromLast = TRUE)
    z.lm[z.left] <- paste0(z.lm[z.left], '-E')
    z.lm[z.right] <- paste0(z.lm[z.right], '-D')
    
    #return(list(id, A, Z))
}




